{"version":3,"file":"static/js/756.e7d8d61f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/Pages/MovieDetails.module.css?40ae","Pages/MovieDetails.jsx","api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__WJiF1\",\"btn\":\"MovieDetails_btn__+LoaF\",\"img\":\"MovieDetails_img__g89Sb\",\"info\":\"MovieDetails_info__6dJh8\",\"title\":\"MovieDetails_title__VMUBR\",\"score\":\"MovieDetails_score__FUc8e\",\"overviewTitle\":\"MovieDetails_overviewTitle__nN2gK\",\"overview\":\"MovieDetails_overview__R51Gr\",\"containerLink\":\"MovieDetails_containerLink__z5hnf\",\"text\":\"MovieDetails_text__XyYHJ\",\"list\":\"MovieDetails_list__Tp1Az\"};","import { NavLink,Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovie } from 'api';\nimport Loader from 'components/Loader/Loader';\nimport { useState, useEffect, useRef } from 'react';\nimport css from './MovieDetails.module.css';\nimport styled from 'styled-components';\n\nconst StyledNavLink = styled(NavLink)`\n  font-size: 14px;\n  font-weight: 500;\n  text-decoration: none;\n  color: black;\n  transition: color 0.2s ease-in-out;\n\n  &.active,\n  &:hover,\n  &:focus {\n    color: orange;\n    text-decoration: underline;\n  }\n`;\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState([]);\n  const [poster, setPoster] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n  useEffect(() => {\n    const fetchOneMovie = async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const results = await fetchMovie(movieId);\n        setMovie(results);\n        setPoster(`https://image.tmdb.org/t/p/w400${results.poster_path}`);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchOneMovie();\n  }, [movieId]);\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Something went wrong, reload the page</p>}\n      {!isLoading && !error && (\n        <main>\n          <div className={css.container}>\n            <button type=\"button\" className={css.btn}>\n              <Link to={backLinkHref.current}>Go Back</Link>\n            </button>\n            <div className={css.info}>\n              {movie.poster_path && (\n                <img src={poster} alt=\"\" className={css.img} />\n              )}\n              {!movie.poster_path && (\n                <img\n                  className={css.img}\n                  src=\"https://kartinki.pibig.info/uploads/posts/2023-04/1681549820_kartinki-pibig-info-p-zaglushka-kartinka-arti-krasivo-2.jpg\"\n                  alt=\"\"\n                />\n              )}\n              <div>\n                <h1 className={css.title}>\n                  {movie.title} (\n                  {movie.release_date && movie.release_date.slice(0, 4)})\n                </h1>\n                <p className={css.score}>\n                  User Score:{' '}\n                  {movie.vote_average && Math.round(movie.vote_average * 10)}%\n                </p>\n                <h3 className={css.overviewTitle}>Overview</h3>\n                <p className={css.overview}>{movie.overview}</p>\n                <h3 className={css.genresTitle}>Genres</h3>\n                <p className={css.genres}>\n                  {movie.genres &&\n                    movie.genres.map(genre => genre.name).join(', ')}\n                </p>\n              </div>\n            </div>\n            <div className={css.containerLink}>\n              <p className={css.text}>Additional information</p>\n              <ul className={css.list}>\n                <li>\n                  <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n                </li>\n                <li>\n                  <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n                </li>\n              </ul>\n              <Outlet />\n            </div>\n          </div>\n        </main>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'c0cdc1a14e8a53ae3d25369920c09f3b';\n// axios.defaults.baseURL = 'https://developers.themoviedb.org/3/';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    // `https://api.themoviedb.org/3/search/movie?api_key=c0cdc1a14e8a53ae3d25369920c09f3b&language=en-US&query=batman&page=1`\n  );\n  return data;\n};\n\nexport const fetchSearchMovies = async (page, query) => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}`\n  );\n  return data;\n};\n\nexport const fetchMovie = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${Number(id)}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${Number(\n      id\n    )}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchReview = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${Number(\n      id\n    )}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};"],"names":["StyledNavLink","styled","NavLink","MovieDetails","useState","movie","setMovie","poster","setPoster","isLoading","setIsLoading","error","setError","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchOneMovie","fetchMovie","results","poster_path","Loader","className","css","type","to","current","src","alt","title","release_date","slice","vote_average","Math","round","overview","genres","map","genre","name","join","API_KEY","fetchTrendMovies","axios","data","fetchSearchMovies","page","query","id","Number","fetchCast","fetchReview"],"sourceRoot":""}