{"version":3,"file":"static/js/168.60c45cb4.chunk.js","mappings":"8SAEMA,EAAU,mCAGHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,kEACsCF,IAF/B,uBACtBG,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAQhBC,EAAiB,mCAAG,WAAOC,EAAMC,GAAb,yFACRJ,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,gCAC+DK,EAD/D,kBAC6EC,IAFrE,uBACvBH,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,wDAOjBI,EAAU,mCAAG,WAAMC,GAAN,yFACDN,EAAAA,EAAAA,IAAA,6CACiBO,OAAOD,GADxB,oBACuCR,EADvC,oBADC,uBAChBG,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAOVO,EAAS,mCAAG,WAAMF,GAAN,yFACAN,EAAAA,EAAAA,IAAA,6CACiBO,OACpCD,GAFmB,4BAGAR,EAHA,oBADA,uBACfG,EADe,EACfA,KADe,kBAMhBA,GANgB,2CAAH,sDASTQ,EAAW,mCAAG,WAAMH,GAAN,yFACFN,EAAAA,EAAAA,IAAA,6CACiBO,OACpCD,GAFmB,4BAGAR,EAHA,oBADE,uBACjBG,EADiB,EACjBA,KADiB,kBAMlBA,GANkB,2CAAH,qD,+ICnCxB,EAAuB,sBAAvB,EAAsD,wBAAtD,EAAwF,yB,SCKzE,SAASS,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,sGAEjBN,GAAa,GACbE,GAAS,GAHQ,UAISR,EAAAA,EAAAA,IAAYS,GAJrB,gBAITI,EAJS,EAITA,QACRT,EAAWS,GALM,kDAOjBL,GAAS,GAPQ,yBASjBF,GAAa,GATI,6EAAH,qDAalBM,GACD,GAAE,CAACH,KAGF,gCACGJ,IAAa,SAACS,EAAA,EAAD,IACbP,IAAS,kEACRF,IAAcE,GAA4B,IAAnBJ,EAAQY,SAC/B,yDAEAV,IAAcE,GAASJ,EAAQY,OAAS,IACxC,eAAIC,UAAWC,EAAf,SACGd,EAAQe,KAAI,SAAAC,GACX,OACE,2BACE,eAAIH,UAAWC,EAAf,SAA4BE,EAAOC,UACnC,cAAGJ,UAAWC,EAAd,SAA4BE,EAAOE,YAF5BF,EAAOtB,GAKnB,QAKV,C","sources":["api.js","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'c0cdc1a14e8a53ae3d25369920c09f3b';\n// axios.defaults.baseURL = 'https://developers.themoviedb.org/3/';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    // `https://api.themoviedb.org/3/search/movie?api_key=c0cdc1a14e8a53ae3d25369920c09f3b&language=en-US&query=batman&page=1`\n  );\n  return data;\n};\n\nexport const fetchSearchMovies = async (page, query) => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}`\n  );\n  return data;\n};\n\nexport const fetchMovie = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${Number(id)}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${Number(\n      id\n    )}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchReview = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${Number(\n      id\n    )}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"author\":\"Reviews_author__CqYAZ\",\"content\":\"Reviews_content__13k0w\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchReview } from 'api';\nimport Loader from 'components/Loader/Loader';\nimport css from './Reviews.module.css';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const { results } = await fetchReview(movieId);\n        setReviews(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Something went wrong, reload the page</p>}\n      {!isLoading && !error && reviews.length === 0 && (\n        <p>Sorry, no reviews available.</p>\n      )}\n      {!isLoading && !error && reviews.length > 0 && (\n        <ul className={css.list}>\n          {reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <h3 className={css.author}>{review.author}</h3>\n                <p className={css.content}>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["API_KEY","fetchTrendMovies","axios","data","fetchSearchMovies","page","query","fetchMovie","id","Number","fetchCast","fetchReview","Reviews","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchReviews","results","Loader","length","className","css","map","review","author","content"],"sourceRoot":""}