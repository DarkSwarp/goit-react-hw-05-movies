{"version":3,"file":"static/js/740.87ed3ddd.chunk.js","mappings":"gRAMe,SAASA,IAAU,IAAD,EAC/B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAIT,EAAO,CACT,IAAMU,EAAgB,mCAAG,sGAErBJ,GAAa,GACbE,GAAS,GAHY,UAIKG,EAAAA,EAAAA,IAAkB,EAAGX,GAJ1B,gBAIbY,EAJa,EAIbA,QACRR,EAAgBQ,GALK,kDAOrBJ,GAAS,GAPY,yBASrBF,GAAa,GATQ,6EAAH,qDAatBI,GACD,CACF,GAAE,CAACV,IAQJ,OACE,iCACE,kBAAMa,SARU,SAAAC,GAClBA,EAAEC,iBACFhB,EAAgB,CAAEC,MAAOc,EAAEE,OAAO,GAAGC,QACrCH,EAAEE,OAAO,GAAGC,MAAQ,EACrB,EAIG,WACE,kBACEC,KAAK,OACLC,KAAK,WAEP,mBAAQD,KAAK,SAAb,uBAEDb,IAAa,SAAC,IAAD,IACbE,IAAS,kEACRF,IAAcE,GAASJ,EAAaiB,OAAS,IAC7C,SAAC,IAAD,CAAYC,OAAQlB,MAI3B,C,8LCpDKmB,EAAU,mCAGHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,kEACsCF,IAF/B,uBACtBG,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAQhBd,EAAiB,mCAAG,WAAOe,EAAM1B,GAAb,yFACRwB,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,gCAC+DI,EAD/D,kBAC6E1B,IAFrE,uBACvByB,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,wDAOjBE,EAAU,mCAAG,WAAMC,GAAN,yFACDJ,EAAAA,EAAAA,IAAA,6CACiBK,OAAOD,GADxB,oBACuCN,EADvC,oBADC,uBAChBG,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAOVK,EAAS,mCAAG,WAAMF,GAAN,yFACAJ,EAAAA,EAAAA,IAAA,6CACiBK,OACpCD,GAFmB,4BAGAN,EAHA,oBADA,uBACfG,EADe,EACfA,KADe,kBAMhBA,GANgB,2CAAH,sDASTM,EAAW,mCAAG,WAAMH,GAAN,yFACFJ,EAAAA,EAAAA,IAAA,6CACiBK,OACpCD,GAFmB,4BAGAN,EAHA,oBADE,uBACjBG,EADiB,EACjBA,KADiB,kBAMlBA,GANkB,2CAAH,qD,oFClCT,SAASO,EAAT,GAAiC,IAAXX,EAAU,EAAVA,OAC7BY,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGb,EAAOc,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAMR,IAAMU,MAAO,CAAEC,KAAMN,GAAhD,SACGG,EAAMI,SAFFJ,EAAMR,GAMlB,KAGN,C","sources":["Pages/Movies.jsx","api.js","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from 'api';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (query) {\n      const fetchQueryMovies = async () => {\n        try {\n          setIsLoading(true);\n          setError(false);\n          const { results } = await fetchSearchMovies(1, query);\n          setSearchMovies(results);\n        } catch (error) {\n          setError(true);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n\n      fetchQueryMovies();\n    }\n  }, [query]);\n\n  const handlSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target[0].value });\n    e.target[0].value = '';\n  };\n\n  return (\n    <>\n      <form onSubmit={handlSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading && <Loader />}\n      {error && <p>Something went wrong, reload the page</p>}\n      {!isLoading && !error && searchMovies.length > 0 && (\n        <MoviesList movies={searchMovies} />\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'c0cdc1a14e8a53ae3d25369920c09f3b';\n// axios.defaults.baseURL = 'https://developers.themoviedb.org/3/';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    // `https://api.themoviedb.org/3/search/movie?api_key=c0cdc1a14e8a53ae3d25369920c09f3b&language=en-US&query=batman&page=1`\n  );\n  return data;\n};\n\nexport const fetchSearchMovies = async (page, query) => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}`\n  );\n  return data;\n};\n\nexport const fetchMovie = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${Number(id)}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${Number(\n      id\n    )}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchReview = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${Number(\n      id\n    )}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};","import { Link, useLocation } from 'react-router-dom';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n"],"names":["Movies","useSearchParams","searchParams","setSearchParams","query","get","useState","searchMovies","setSearchMovies","isLoading","setIsLoading","error","setError","useEffect","fetchQueryMovies","fetchSearchMovies","results","onSubmit","e","preventDefault","target","value","type","name","length","movies","API_KEY","fetchTrendMovies","axios","data","page","fetchMovie","id","Number","fetchCast","fetchReview","MoviesList","location","useLocation","map","movie","to","state","from","title"],"sourceRoot":""}