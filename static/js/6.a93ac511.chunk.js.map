{"version":3,"file":"static/js/6.a93ac511.chunk.js","mappings":"oQAKe,SAASA,IACtB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,sGAExBJ,GAAa,GACbE,GAAS,GAHe,UAIEG,EAAAA,EAAAA,MAJF,gBAIhBC,EAJgB,EAIhBA,QACRR,EAAeQ,GALS,kDAOxBJ,GAAS,GAPe,yBASxBF,GAAa,GATW,6EAAH,qDAazBI,GACD,GAAE,KAGD,gCACGL,IAAa,SAAC,IAAD,IACbE,IAAS,kEACRF,IAAcE,GAASJ,EAAYU,OAAS,IAC5C,SAAC,IAAD,CAAYC,OAAQX,MAI3B,C,8LClCKY,EAAU,mCAGHJ,EAAgB,mCAAG,sGACPK,EAAAA,EAAAA,IAAA,kEACsCD,IAF/B,uBACtBE,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAQhBC,EAAiB,mCAAG,WAAOC,EAAMC,GAAb,yFACRJ,EAAAA,EAAAA,IAAA,4DACgCD,EADhC,gCAC+DI,EAD/D,kBAC6EC,IAFrE,uBACvBH,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,wDAOjBI,EAAU,mCAAG,WAAMC,GAAN,yFACDN,EAAAA,EAAAA,IAAA,6CACiBO,OAAOD,GADxB,oBACuCP,EADvC,oBADC,uBAChBE,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAOVO,EAAS,mCAAG,WAAMF,GAAN,yFACAN,EAAAA,EAAAA,IAAA,6CACiBO,OACpCD,GAFmB,4BAGAP,EAHA,oBADA,uBACfE,EADe,EACfA,KADe,kBAMhBA,GANgB,2CAAH,sDASTQ,EAAW,mCAAG,WAAMH,GAAN,yFACFN,EAAAA,EAAAA,IAAA,6CACiBO,OACpCD,GAFmB,4BAGAP,EAHA,oBADE,uBACjBE,EADiB,EACjBA,KADiB,kBAMlBA,GANkB,2CAAH,qD,oFClCT,SAASS,EAAT,GAAiC,IAAXZ,EAAU,EAAVA,OAC7Ba,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGd,EAAOe,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAMR,IAAMU,MAAO,CAAEC,KAAMN,GAAhD,SACGG,EAAMI,SAFFJ,EAAMR,GAMlB,KAGN,C","sources":["Pages/Home.jsx","api.js","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchTrendMovies } from 'api';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nexport default function Home() {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const { results } = await fetchTrendMovies();\n        setTrendMovies(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Something went wrong, reload the page</p>}\n      {!isLoading && !error && trendMovies.length > 0 && (\n        <MoviesList movies={trendMovies} />\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'c0cdc1a14e8a53ae3d25369920c09f3b';\n// axios.defaults.baseURL = 'https://developers.themoviedb.org/3/';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    // `https://api.themoviedb.org/3/search/movie?api_key=c0cdc1a14e8a53ae3d25369920c09f3b&language=en-US&query=batman&page=1`\n  );\n  return data;\n};\n\nexport const fetchSearchMovies = async (page, query) => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}`\n  );\n  return data;\n};\n\nexport const fetchMovie = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${Number(id)}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${Number(\n      id\n    )}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchReview = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${Number(\n      id\n    )}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};","import { Link, useLocation } from 'react-router-dom';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n"],"names":["Home","useState","trendMovies","setTrendMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","fetchTrendMovies","results","length","movies","API_KEY","axios","data","fetchSearchMovies","page","query","fetchMovie","id","Number","fetchCast","fetchReview","MoviesList","location","useLocation","map","movie","to","state","from","title"],"sourceRoot":""}